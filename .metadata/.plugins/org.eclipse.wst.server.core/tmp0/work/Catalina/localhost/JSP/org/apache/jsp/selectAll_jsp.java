/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-26 05:35:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.TryCatchFinally;
import kr.ac.kopo07.ctc.kopo07.dao.*;
import kr.ac.kopo07.ctc.kopo07.domain.*;
import kr.ac.kopo07.ctc.kopo07.dto.*;
import java.sql.*;
import javax.sql.*;
import java.io.*;
import java.util.*;

public final class selectAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("kr.ac.kopo07.ctc.kopo07.dto");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("kr.ac.kopo07.ctc.kopo07.domain");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("kr.ac.kopo07.ctc.kopo07.dao");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.servlet.jsp.tagext.TryCatchFinally");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- JDBC 사용시 필요한 임포트 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/selectAll.css\">\r\n");
      out.write("\r\n");
      out.write("<BODY>\r\n");
      out.write("\r\n");
      out.write("	<center>\r\n");
      out.write("		<table>\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr id=\"thead\">\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<th>번호</th>\r\n");
      out.write("					<th>국어점수</th>\r\n");
      out.write("					<th>영어점수</th>\r\n");
      out.write("					<th>수학점수</th>\r\n");
      out.write("					<th>총점</th>\r\n");
      out.write("					<th>평균</th>\r\n");
      out.write("					<th>등수</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("\r\n");
      out.write("			");

			StudentItemDao StudentItemDao = new StudentItemDaoImpl();

			List<StudentItem> studentList = StudentItemDao.selectAllStudent();
			List<StudentItemDto> studentListWithSum = new ArrayList<>();

			//===============================================================

			for (StudentItem student : studentList) {
				StudentItemDto oneStu = new StudentItemDto();
				int kor = student.getKor();
				int eng = student.getEng();
				int mat = student.getMat();
				oneStu.setId(student.getId());
				oneStu.setStudentid(student.getStudentid());
				oneStu.setName(student.getName());
				oneStu.setKor(kor);
				oneStu.setEng(eng);
				oneStu.setMat(mat);
				oneStu.setSum(kor + eng + mat);

				//소수점 2자리 뒤에서 버리기
				double avgSco = (double) (kor + eng + mat) / 3.0;
				double avgScore = Math.round(avgSco * 100) / 100.0;

				oneStu.setAvg(avgScore);
				studentListWithSum.add(oneStu);
			}

			//합계로 정렬
			/* Collections.sort(studentListWithSum, new StudentItemComparator()); */

			//===============================================================
			for (StudentItemDto student : studentListWithSum) {
				int rankNumber = StudentItemDao.getRank(student.getStudentid());
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<tbody>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><a id=\"clickhere\"\r\n");
      out.write("						href=\"select.jsp?id=");
      out.print(student.getId());
      out.write('"');
      out.write('>');
      out.print(student.getName());
      out.write("</a></td>\r\n");
      out.write("					<td>");
      out.print(student.getStudentid());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(student.getKor());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(student.getEng());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(student.getMat());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(student.getSum());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(student.getAvg());
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("					<td>");
      out.print(rankNumber);
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("	</center>\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
